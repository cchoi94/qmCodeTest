{"ast":null,"code":"import _classCallCheck from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cody.choi/Desktop/qm-todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cody.choi/Desktop/qm-todo-app/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport classes from './TodoList.css';\nimport jsonData from '../../data.json';\nimport Moment from 'moment';\nimport CardList from '../../components/CardList/CardList';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this));\n    _this.state = {\n      data: [],\n      checkedBoxArr: [],\n      taskCompleted: false,\n      imgPrefix: 'https://dev-quartermaster.imgix.net/'\n    };\n    _this.handleCBoxClick = _this.handleCBoxClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var dataArr = [];\n      jsonData.data.map(function (el) {\n        console.log(el);\n        dataArr.push(el);\n      });\n      this.setState({\n        data: dataArr\n      });\n    }\n  }, {\n    key: \"handleCBoxClick\",\n    value: function handleCBoxClick(completed, index) {\n      var _this2 = this;\n\n      this.setState({\n        taskCompleted: !completed\n      }, function () {\n        console.log(_this2.state.taskCompleted);\n      }); // const newArray = [...this.state.checkedBoxArr];\n      // newArray.push(index)\n      // this.setState({\n      //     checkedBoxArr: newArray\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classes.ToDoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.ToDoHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"To Do List\"), Moment().format('MMMM Do YYYY'))), React.createElement(CardList, {\n        info: this.state.data,\n        imgPrefix: this.state.imgPrefix,\n        boxClick: this.handleCBoxClick,\n        checked: this.state.taskCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/cody.choi/Desktop/qm-todo-app/src/containers/TodoList/TodoList.js"],"names":["React","Component","classes","jsonData","Moment","CardList","AppBar","Toolbar","Typography","TodoList","state","data","checkedBoxArr","taskCompleted","imgPrefix","handleCBoxClick","bind","getData","dataArr","map","el","console","log","push","setState","completed","index","ToDoContainer","ToDoHeader","format"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAGMC,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,aAAa,EAAE,KAHN;AAITC,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMA,UAAKC,eAAL,GAAqB,MAAKA,eAAL,CAAqBC,IAArB,uDAArB;AARU;AASb;;;;wCAGmB;AAChB,WAAKC,OAAL;AACH;;;8BAES;AACN,UAAMC,OAAO,GAAG,EAAhB;AACAf,MAAAA,QAAQ,CAACQ,IAAT,CAAcQ,GAAd,CAAkB,UAAAC,EAAE,EAAI;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAF,QAAAA,OAAO,CAACK,IAAR,CAAaH,EAAb;AACH,OAHD;AAIA,WAAKI,QAAL,CAAc;AACVb,QAAAA,IAAI,EAAEO;AADI,OAAd;AAGH;;;oCAEeO,S,EAAWC,K,EAAO;AAAA;;AAC1B,WAAKF,QAAL,CAAc;AACVX,QAAAA,aAAa,EAAG,CAACY;AADP,OAAd,EAEG,YAAM;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWG,aAAvB;AACH,OAJD,EAD0B,CAM9B;AACA;AACA;AACA;AACA;AACH;;;6BAES;AACN,aACG;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACyB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAISxB,MAAM,GAAGyB,MAAT,CAAgB,cAAhB,CAJT,CADJ,CADL,EASK,oBAAC,QAAD;AACI,QAAA,IAAI,EAAI,KAAKnB,KAAL,CAAWC,IADvB;AAEI,QAAA,SAAS,EAAI,KAAKD,KAAL,CAAWI,SAF5B;AAGI,QAAA,QAAQ,EAAI,KAAKC,eAHrB;AAII,QAAA,OAAO,EAAI,KAAKL,KAAL,CAAWG,aAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATL,CADH;AAkBH;;;;EA5DkBZ,S;;AA+DvB,eAAeQ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from './TodoList.css';\n\nimport jsonData from '../../data.json';\nimport Moment from 'moment';\nimport CardList from '../../components/CardList/CardList';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass TodoList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            checkedBoxArr: [],\n            taskCompleted: false,\n            imgPrefix: 'https://dev-quartermaster.imgix.net/'\n        }\n        this.handleCBoxClick=this.handleCBoxClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        const dataArr = [];\n        jsonData.data.map(el => {\n            console.log(el)\n            dataArr.push(el)\n        })\n        this.setState({\n            data: dataArr\n        })\n    }\n\n    handleCBoxClick(completed, index) {\n            this.setState({\n                taskCompleted : !completed\n            }, () => {\n                console.log(this.state.taskCompleted)\n            })\n        // const newArray = [...this.state.checkedBoxArr];\n        // newArray.push(index)\n        // this.setState({\n        //     checkedBoxArr: newArray\n        // })\n    }\n\n    render () {\n        return (\n           <div className={classes.ToDoContainer}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.ToDoHeader}>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            To Do List\n                        </Typography>\n                            {Moment().format('MMMM Do YYYY')}\n                    </Toolbar>\n                </AppBar>\n                <CardList\n                    info = {this.state.data}\n                    imgPrefix = {this.state.imgPrefix}\n                    boxClick = {this.handleCBoxClick}\n                    checked = {this.state.taskCompleted} \n                />\n           </div> \n        )\n    }\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}